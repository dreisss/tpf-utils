---
import { ArrowBigDown, ArrowBigDownDash, Check, CirclePlus, PackageMinus, PackageOpen, PackagePlus, Search, Settings2, Truck } from 'lucide-solid'
---

<html lang="pt-br">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Inventário | Tapajós Formaturas</title>

    <script is:inline>
      document.addEventListener('alpine:init', () => {
        Alpine.store('db', {
          items: [
            {
              id: crypto.randomUUID(),
              name: 'Canudo Grande Azul',
              category: 'Canudo',
              currentQuantity: 201,
              minimumQuantity: 50,
              recommendedQuantity: 100,
              maximumQuantity: 300,
            },
          ],
        })
      })
    </script>
  </head>

  <body>
    <div class="container mx-auto">
      <div class="flex p-4">
        <div class="flex grow gap-2">
          <label class="input input-sm input-bordered flex w-64 items-center gap-2">
            <Search class="h-4 w-4" />
            <input type="text" placeholder="Procurar" class="grow" />
          </label>

          <button class="btn btn-outline btn-secondary btn-sm">
            <CirclePlus class="h-4 w-4" />
            Novo
          </button>
        </div>

        <div class="flex flex-none gap-2">
          <button class="btn btn-outline btn-error btn-sm">
            <PackageOpen class="h-4 w-4" />
            Saída
          </button>

          <button class="btn btn-outline btn-success btn-sm">
            <Truck class="h-4 w-4" />
            Entrada
          </button>
        </div>
      </div>

      <div>
        <table class="table table-pin-rows">
          <thead>
            <tr>
              <th></th>
              <th>Id</th>
              <th>Nome</th>
              <th>Categoria</th>
              <th>Quantidade Atual</th>
              <th>Entrada/Saída Prevista</th>
              <th>Status</th>
              <th>Ações</th>
            </tr>
          </thead>

          <tbody x-data>
            <template x-for="item in ($store.db.items)" :key="item.id">
              <tr>
                <td class="w-0">
                  <div class="flex">
                    <input type="checkbox" class="checkbox checkbox-sm" />
                  </div>
                </td>

                <td x-text="item.id.toString().slice(0, 6) + '...'" class="overflow-hidden text-ellipsis whitespace-nowrap"></td>

                <td x-text="item.name"></td>

                <td x-text="item.category"></td>

                <td x-text="item.currentQuantity"></td>

                <td>
                  <div class="flex gap-2">
                    <!-- <div class="badge badge-success badge-outline select-none">+24</div> -->
                    <!-- <div class="badge badge-error badge-outline select-none">-10</div> -->
                  </div>
                </td>

                <td>
                  <template x-if="item.currentQuantity <= item.minimumQuantity">
                    <div class="badge badge-error flex select-none items-center gap-1">
                      <ArrowBigDown class="h-4 w-4" />
                      abaixo do mínimo
                    </div>
                  </template>

                  <template x-if="item.currentQuantity > item.minimumQuantity && item.currentQuantity <= (item.minimumQuantity + item.recommendedQuantity) / 2">
                    <div class="badge badge-warning flex select-none items-center gap-1">
                      <ArrowBigDown class="h-4 w-4" />
                      abaixo do recomendado
                    </div>
                  </template>

                  <template
                    x-if="item.currentQuantity > (item.minimumQuantity + item.recommendedQuantity) / 2 && item.currentQuantity <= (item.recommendedQuantity + item.maximumQuantity) / 2"
                  >
                    <div class="badge badge-success flex select-none items-center gap-1">
                      <Check class="h-4 w-4" />
                      recomendado
                    </div>
                  </template>

                  <template x-if="item.currentQuantity > (item.recommendedQuantity + item.maximumQuantity) / 2 && item.currentQuantity <= item.maximumQuantity">
                    <div class="badge badge-warning flex select-none items-center gap-1">
                      <Check class="h-4 w-4" />
                      acima do recomendado
                    </div>
                  </template>

                  <template x-if="item.currentQuantity > item.maximumQuantity">
                    <div class="badge badge-error flex select-none items-center gap-1">
                      <Check class="h-4 w-4" />
                      acima do máximo
                    </div>
                  </template>
                </td>

                <td class="w-0">
                  <div class="join">
                    <button class="btn join-item btn-neutral btn-sm"><Settings2 class="h-4 w-4" /></button>
                    <button class="btn join-item btn-neutral btn-sm"><PackageMinus class="h-4 w-4" /></button>
                    <button class="btn join-item btn-neutral btn-sm"><PackagePlus class="h-4 w-4" /></button>
                  </div>
                </td>
              </tr>
            </template>
          </tbody>
        </table>
      </div>
    </div>
  </body>
</html>
